// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const CrossL2InboxStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"src/interop/CrossL2Inbox.sol:CrossL2Inbox\",\"label\":\"roots\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))\"},{\"astId\":1001,\"contract\":\"src/interop/CrossL2Inbox.sol:CrossL2Inbox\",\"label\":\"unconsumedMessages\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_mapping(t_bytes32,t_bool)\"},{\"astId\":1002,\"contract\":\"src/interop/CrossL2Inbox.sol:CrossL2Inbox\",\"label\":\"chainState\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_mapping(t_bytes32,t_struct(ChainState)1005_storage)\"},{\"astId\":1003,\"contract\":\"src/interop/CrossL2Inbox.sol:CrossL2Inbox\",\"label\":\"crossL2Sender\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_address\"},{\"astId\":1004,\"contract\":\"src/interop/CrossL2Inbox.sol:CrossL2Inbox\",\"label\":\"messageSourceChain\",\"offset\":0,\"slot\":\"4\",\"type\":\"t_bytes32\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_bool\":{\"encoding\":\"inplace\",\"label\":\"bool\",\"numberOfBytes\":\"1\"},\"t_bytes32\":{\"encoding\":\"inplace\",\"label\":\"bytes32\",\"numberOfBytes\":\"32\"},\"t_mapping(t_bytes32,t_bool)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e bool)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_bool\"},\"t_mapping(t_bytes32,t_mapping(t_bytes32,t_bool))\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e mapping(bytes32 =\u003e bool))\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_mapping(t_bytes32,t_bool)\"},\"t_mapping(t_bytes32,t_struct(ChainState)1005_storage)\":{\"encoding\":\"mapping\",\"label\":\"mapping(bytes32 =\u003e struct ChainState)\",\"numberOfBytes\":\"32\",\"key\":\"t_bytes32\",\"value\":\"t_struct(ChainState)1005_storage\"},\"t_struct(ChainState)1005_storage\":{\"encoding\":\"inplace\",\"label\":\"struct ChainState\",\"numberOfBytes\":\"64\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var CrossL2InboxStorageLayout = new(solc.StorageLayout)

var CrossL2InboxDeployedBin = "0x60806040526004361061007b5760003560e01c8063c220426b1161004e578063c220426b1461019a578063db10b9a9146101da578063e5507be314610212578063e63c390c1461023457600080fd5b80632cfea9fe146100805780633d6d0dd4146100ce57806354fd4d501461012057806360a687aa14610176575b600080fd5b34801561008c57600080fd5b506100b461009b366004610b09565b6002602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b3480156100da57600080fd5b506003546100fb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c5565b34801561012c57600080fd5b506101696040518060400160405280600581526020017f302e302e3100000000000000000000000000000000000000000000000000000081525081565b6040516100c59190610b22565b34801561018257600080fd5b5061018c60045481565b6040519081526020016100c5565b3480156101a657600080fd5b506101ca6101b5366004610b09565b60016020526000908152604090205460ff1681565b60405190151581526020016100c5565b3480156101e657600080fd5b506101ca6101f5366004610b95565b600060208181529281526040808220909352908152205460ff1681565b34801561021e57600080fd5b5061023261022d366004610ce4565b610247565b005b610232610242366004610da6565b610527565b604081015146146102df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f43726f73734c32496e626f783a2074617267657420636861696e20646f65732060448201527f6e6f74206d61746368000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60006102ea826108f9565b60008181526001602052604090205490915060ff16610365576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43726f73734c32496e626f783a20756e6b6e6f776e206d65737361676500000060448201526064016102d6565b60035473ffffffffffffffffffffffffffffffffffffffff1661dead1461040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f43726f73734c32496e626f783a2063616e206f6e6c792074726967676572206f60448201527f6e652063616c6c20706572206d6573736167650000000000000000000000000060648201526084016102d6565b8160600151600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160200151600481905550600061047c83608001518460c001518560a001518660e00151610a8d565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560006004819055838152600160205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555190915082907f608b51d991a28926c87c94dae8c72df6a62c5f22b359bb418bf204355b39fa7d9061051a90841515815260200190565b60405180910390a2505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f43726f73734c32496e626f783a206f6e6c7920706f737469652063616e20646560448201527f6c69766572206d61696c0000000000000000000000000000000000000000000060648201526084016102d6565b60005b818110156108f4576002600084848481811061060d5761060d610e1b565b905060200281019061061f9190610e4a565b6000013581526020019081526020016000206001015483838381811061064757610647610e1b565b90506020028101906106599190610e4a565b60400135116106ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f43726f73734c32496e626f783a20626c6f636b4e756d626572206d757374206260448201527f6520696e6372656173696e67000000000000000000000000000000000000000060648201526084016102d6565b604051806040016040528084848481811061070757610707610e1b565b90506020028101906107199190610e4a565b60200135815260200184848481811061073457610734610e1b565b90506020028101906107469190610e4a565b6040013590526002600085858581811061076257610762610e1b565b90506020028101906107749190610e4a565b3581526020808201929092526040016000908120835181559290910151600192830155808585858181106107aa576107aa610e1b565b90506020028101906107bc9190610e4a565b60000135815260200190815260200160002060008585858181106107e2576107e2610e1b565b90506020028101906107f49190610e4a565b60200135815260200190815260200160002060006101000a81548160ff02191690831515021790555060005b83838381811061083257610832610e1b565b90506020028101906108449190610e4a565b610852906060810190610e88565b90508110156108e157600180600086868681811061087257610872610e1b565b90506020028101906108849190610e4a565b610892906060810190610e88565b858181106108a2576108a2610e1b565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555080806108d990610ef7565b915050610820565b50806108ec81610ef7565b9150506105ef565b505050565b60e0810151805160209182018190206040805193840182905283019190915260009182906060016040516020818303038152906040528051906020012090506000846060015185608001518660a001518760c00151604051602001610992949392919073ffffffffffffffffffffffffffffffffffffffff94851681529290931660208301526040820152606081019190915260800190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012081840152828201949094528051808303820181526060830182528051908501208785015197820151608084019890985260a0808401989098528151808403909801885260c08301825287519785019790972060e0830152610100808301979097528051808303909701875261012090910190525083519301929092207effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01000000000000000000000000000000000000000000000000000000000000001792915050565b6000806000610a9d866000610aeb565b905080610ad3576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b600080603f83619c4001026040850201603f5a021015949350505050565b600060208284031215610b1b57600080fd5b5035919050565b600060208083528351808285015260005b81811015610b4f57858101830151858201604001528201610b33565b81811115610b61576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008060408385031215610ba857600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610c0a57610c0a610bb7565b60405290565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c3457600080fd5b919050565b600082601f830112610c4a57600080fd5b813567ffffffffffffffff80821115610c6557610c65610bb7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610cab57610cab610bb7565b81604052838152866020858801011115610cc457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610cf657600080fd5b813567ffffffffffffffff80821115610d0e57600080fd5b908301906101008286031215610d2357600080fd5b610d2b610be6565b823581526020830135602082015260408301356040820152610d4f60608401610c10565b6060820152610d6060808401610c10565b608082015260a083013560a082015260c083013560c082015260e083013582811115610d8b57600080fd5b610d9787828601610c39565b60e08301525095945050505050565b60008060208385031215610db957600080fd5b823567ffffffffffffffff80821115610dd157600080fd5b818501915085601f830112610de557600080fd5b813581811115610df457600080fd5b8660208260051b8501011115610e0957600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81833603018112610e7e57600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610ebd57600080fd5b83018035915067ffffffffffffffff821115610ed857600080fd5b6020019150600581901b3603821315610ef057600080fd5b9250929050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a"


func init() {
	if err := json.Unmarshal([]byte(CrossL2InboxStorageLayoutJSON), CrossL2InboxStorageLayout); err != nil {
		panic(err)
	}

	layouts["CrossL2Inbox"] = CrossL2InboxStorageLayout
	deployedBytecodes["CrossL2Inbox"] = CrossL2InboxDeployedBin
	immutableReferences["CrossL2Inbox"] = true
}
