version: '3.8'

x-indexer-env-vars: &indexer-env-vars
  INDEXER_CONFIG: /indexer/indexer.toml
  INDEXER_RPC_URL_L1: $INDEXER_RPC_URL_L1
  INDEXER_RPC_URL_L2: $INDEXER_RPC_URL_L2
  INDEXER_CHAIN_PRESET: $INDEXER_CHAIN_PRESET
  INDEXER_DB_HOST: postgres
  INDEXER_DB_USER: db_username
  INDEXER_DB_PASS: db_password
  INDEXER_DB_NAME: db_name
  INDEXER_DB_PORT: 5432

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=db_username
      - POSTGRES_PASSWORD=db_password
      - POSTGRES_DB=db_name
      - PGDATA=/data/postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U db_username -d db_name" ]
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/data/postgres
      - ./migrations:/docker-entrypoint-initdb.d/

  indexer:
    build:
      context: ..
      dockerfile: indexer/Dockerfile
    command: ["indexer", "index"]
    healthcheck:
      test: wget localhost:8080/healthz -q -O - > /dev/null 2>&1
    environment:
      <<: *indexer-env-vars

    ports:
      # api
      - 8081:8080
      # metrics
      - 7301:7300
    volumes:
      - ./indexer.toml:/indexer/indexer.toml
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ..
      dockerfile: indexer/Dockerfile
    command: ["indexer", "api"]
    healthcheck:
      test: wget localhost:8080/healthz -q -O - > /dev/null 2>&1
    environment:
      <<: *indexer-env-vars
    volumes:
      - ./indexer.toml:/indexer/indexer.toml
    ports:
      # api
      - 8080:8080
      # metrics
      - 7300:7300
    depends_on:
      postgres:
        condition: service_healthy
        
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--alertmanager.url=http://alertmanager:9093"
    ports:
      - "9090:9090"
    depends_on:
      api:
        condition: service_healthy
      indexer:
        condition: service_healthy

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  prisma-studio:
    build:
      context: ..
      dockerfile: indexer/ui/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://db_username:db_password@postgres:5432/db_name}
    ports:
      - 5555:5555
    healthcheck:
      test: wget localhost:5555 -q -O - > /dev/null 2>&1
    depends_on:
      postgres:
        condition: service_healthy

  prisma-check: 
    restart: "no"
    build:
      context: ..
      dockerfile: indexer/ui/Dockerfile
    command: ./prisma.sh --check
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://db_username:db_password@postgres:5432/db_name}
    depends_on:
      indexer:
        condition: service_healthy
      postgres:
        condition: service_healthy


volumes:
  postgres_data:
  grafana_data:
